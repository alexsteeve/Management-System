# Generated by Django 4.1.7 on 2023-03-31 16:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cars', '0016_car_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ac_compressor', 'A/C COMPRESSOR'), ('abs_module', 'ABS MODULE'), ('airbag', 'AIRBAG'), ('alternator', 'ALTERNATOR'), ('battery', 'BATTERY'), ('body_control_module', 'BODY CONTROL MODULE'), ('booster', 'BOOSTER'), ('brake_caliper_front_left', 'BRAKE CALIPER FRONT LEFT'), ('brake_caliper_front_right', 'BRAKE CALIPER FRONT RIGHT'), ('brake_caliper_rear_left', 'BRAKE CALIPER REAR LEFT'), ('brake_caliper_rear_right', 'BRAKE CALIPER REAR RIGHT'), ('catalyst', 'CATALYST'), ('climate_control_module', 'CLIMATE CONTROL MODULE'), ('drive_axle_front_left', 'DRIVE AXLE FRONT LEFT'), ('drive_axle_front_right', 'DRIVE AXLE FRONT RIGHT'), ('drive_axle_rear_left', 'DRIVE AXLE REAR LEFT'), ('drive_axle_rear_right', 'DRIVE AXLE REAR RIGHT'), ('electronic_throttle_body', 'ELECTRONIC THROTTLE BODY'), ('engine', 'ENGINE'), ('engine_control_module', 'ENGINE CONTROL MODULE'), ('eps_column', 'EPS COLUMN'), ('eps_rack', 'EPS RACK'), ('fan_from_radiator', 'FAN FROM RADIATOR'), ('footweel_module', 'FOOTWEEL MODULE'), ('inverter_hybrid_voltage_converter', 'INVERTER / HYBRID VOLTAGE CONVERTER'), ('manual_racks', 'MANUAL RACKS'), ('passenger_inflator', 'PASSENGER INFLATOR'), ('power_booster', 'POWER BOOSTER'), ('power_steering_pump', 'POWER STEERING PUMP'), ('rack_pinion_power', 'RACK & PINION POWER'), ('radiator', 'RADIATOR'), ('radio_audio', 'RADIO / AUDIO'), ('salvage', 'SALVAGE'), ('starter', 'STARTER'), ('tipm', 'TIPM'), ('tires', 'TIRES'), ('transfer_case', 'TRANSFER CASE'), ('transmission', 'TRANSMISSION'), ('transmission_control_module', 'TRANSMISSION CONTROL MODULE'), ('wheels', 'WHEELS'), ('wire', 'WIRE')], max_length=50)),
                ('year_init', models.PositiveSmallIntegerField()),
                ('year_final', models.PositiveSmallIntegerField()),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('engine', models.CharField(max_length=100)),
                ('driver_type', models.CharField(max_length=100)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('buyer', models.CharField(choices=[('sam', 'SAM'), ('other_rockledge', 'OTHER_ROCKLEDGE')], max_length=50)),
            ],
        ),
    ]
